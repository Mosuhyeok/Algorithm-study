import java.io.*;
import java.util.*;
/*
    0 - 1
    1 - 0, 2
    2 - 1, 3
    3 - 2, 4
    4 - 3, 5
    5 - 4, 6
    6 - 5, 7
    7 - 6, 8
    8 - 7, 9
    9 - 8

   (1) : -, 1, 2, 3, 4, 5, 6, 7, 8, 9
        <끝자리에 대해서>
        0(0), 1(1), 2(1), 3(1), 4(1), 5(1), 6(1), 7(1), 8(1), 9(1)
   (2) : 1 -> 10 12  (2)
         2 -> 21, 23 (2)
         3 -> 32, 34 (2)
         4 -> 43, 45 (2)
         5 -> 54, 56 (2)
         6 -> 65, 67 (2)
         7 -> 76, 78 (2)
         8 -> 87, 89 (2)
         9 -> 98     (1)
         <끝자리에 대해서>
         0(1), 1(1), 2(2), 3(2), 4(2), 5(2), 6(2), 7(2), 8(2), 9(1)
   (3) : [1] : 10 -> 101
             : 12 -> 121, 123
         [2] : 21 -> 210, 212
               23 -> 232, 234
         [3] : 32 -> 321, 323
               34 -> 343, 345
         [4] : 43 -> 432, 434
               45 -> 454, 456
         [5] : 54 -> 543, 545
               56 -> 565, 567
         [6] : 65 -> 654, 656
               67 -> 676, 678
         [7] : 76 -> 765, 767
               78 -> 787, 789
         [8] : 87 -> 876, 878
               89 -> 898
         [9] : 98 -> 987, 989
         <끝자리에 대해서>
         0(1), 1(3), 2(3), 3(4), 4(4), 5(4), 6(4), 7(4), 8(3), 9(2)
   (4) : [1] : 101 -> 1010, 1012
               121 -> 1210, 1212
               123 -> 1232, 1234
         [2] : 210 -> 2101
               212 -> 2121, 2123
               232 -> 2321, 2323
               234 -> 2343, 2345
         [3] : 321 -> 3210, 3212
               323 -> 3232, 3234
               343 -> 3432, 3434
               345 -> 3454, 3456
         [4] : 432 -> 4321, 4323
               434 -> 4343, 4345
               454 -> 4543, 4545
               456 -> 4565, 4567
         [5] : 543 -> 5432, 5434
               545 -> 5454, 5456
               565 -> 5654, 5656
               567 -> 5676, 5678
         [6] : 654 -> 6543, 6545
               656 -> 6565, 6567
               676 -> 6765, 6767
               678 -> 6787, 6789
         [7] : 765 -> 7654, 7656
               767 -> 7676, 7678
               787 -> 7876, 7878
               789 -> 7898
         [8] : 876 -> 8765, 8767
               878 -> 8787, 8789
               898 -> 8987, 8989
         [9] : 987 -> 9876, 9878
               989 -> 9898
         <끝자리에 대해서>
         0(3), 1(4), 2(7), 3(7), 4(8), 5(8), 6(8), 7(7), 8(6), 9(3)

   [요약]
   길이 N에 대해
   N=1 : 0(0), 1(1), 2(1), 3(1), 4(1), 5(1), 6(1), 7(1), 8(1), 9(1)
   N=2 : 0(1), 1(3), 2(3), 3(4), 4(4), 5(4), 6(4), 7(4), 8(3), 9(2)
   N=3 : 0(1), 1(3), 2(3), 3(4), 4(4), 5(4), 6(4), 7(4), 8(3), 9(2)
   N=4 : 0(3), 1(4), 2(7), 3(7), 4(8), 5(8), 6(8), 7(7), 8(6), 9(3)

   => 현재길이(N)에 대해서
      끝자리 0 인경우 (N-1)길이에서의 끝자리 1의 값
      끝자리 1~8 인 경우 (N-1)길이에서의 끝자리 k-1, k+1 의 값
      끝자리  인 경우 (N-1) 길이에서의 끝자리 8의 값
 */
public class BOJ10844 {
    public static void main(String[] args) throws Exception{
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int N = Integer.parseInt(br.readLine());
        int[][] dp = new int[N+1][10];
        dp[1] = new int[] {0, 1, 1, 1, 1, 1, 1, 1, 1, 1};

        for(int i = 2 ; i <= N ; i++){
            for(int j = 0 ; j <= 9 ; j++){
                if(j-1 >= 0){
                    dp[i][j] += dp[i-1][j-1] % 1000000000;
                }
                if(j+1 <= 9) {
                    dp[i][j] = (dp[i][j] + dp[i - 1][j + 1] % 1000000000) % 1000000000;
                }
            }
        }

        int sum = 0;
        for(int i = 0 ; i <= 9 ; i++){
            sum += (dp[N][i] % 1000000000);
            sum = sum % 1000000000;
        }

        System.out.println(sum);
        br.close();
    }
}
